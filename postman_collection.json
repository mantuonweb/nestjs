{
  "info": {
    "_postman_id": "12345678-1234-1234-1234-123456789012",
    "name": "NestJS Users API Collection",
    "description": "Complete API collection for NestJS Users module with all CRUD operations",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "item": [
    {
      "name": "Users",
      "item": [
        {
          "name": "Create User - Basic",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('userId', response.id);",
                  "    pm.test('User created successfully', function () {",
                  "        pm.response.to.have.status(201);",
                  "    });",
                  "    pm.test('Response has required fields', function () {",
                  "        pm.expect(response).to.have.property('id');",
                  "        pm.expect(response).to.have.property('userName');",
                  "        pm.expect(response).to.have.property('userEmail');",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userName\": \"johndoe\",\n  \"userEmail\": \"john.doe@example.com\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users"
              ]
            },
            "description": "Create a basic user with default role"
          },
          "response": []
        },
        {
          "name": "Create User - Admin",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userName\": \"adminuser\",\n  \"userEmail\": \"admin@example.com\",\n  \"firstName\": \"Admin\",\n  \"lastName\": \"User\",\n  \"roles\": \"admin\",\n  \"isActive\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users"
              ]
            },
            "description": "Create an admin user"
          },
          "response": []
        },
        {
          "name": "Create User - Moderator",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userName\": \"moderator1\",\n  \"userEmail\": \"moderator@example.com\",\n  \"firstName\": \"Jane\",\n  \"lastName\": \"Smith\",\n  \"roles\": \"moderator\",\n  \"isActive\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users"
              ]
            },
            "description": "Create a moderator user"
          },
          "response": []
        },
        {
          "name": "Get All Users",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users"
              ]
            },
            "description": "Retrieve all users"
          },
          "response": []
        },
        {
          "name": "Get Active Users Only",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users?active=true",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users"
              ],
              "query": [
                {
                  "key": "active",
                  "value": "true",
                  "description": "Filter for active users only"
                }
              ]
            },
            "description": "Retrieve only active users"
          },
          "response": []
        },
        {
          "name": "Get User by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('User has required properties', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('id');",
                  "    pm.expect(response).to.have.property('userName');",
                  "    pm.expect(response).to.have.property('userEmail');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                "{{userId}}"
              ]
            },
            "description": "Retrieve a specific user by ID"
          },
          "response": []
        },
        {
          "name": "Get User by Email",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/email/john.doe@example.com",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                "email",
                "john.doe@example.com"
              ]
            },
            "description": "Retrieve a user by email address"
          },
          "response": []
        },
        {
          "name": "Get User by Username",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/username/johndoe",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                "username",
                "johndoe"
              ]
            },
            "description": "Retrieve a user by username"
          },
          "response": []
        },
        {
          "name": "Update User - Basic Info",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"Johnny\",\n  \"lastName\": \"Doe Updated\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                "{{userId}}"
              ]
            },
            "description": "Update user's basic information"
          },
          "response": []
        },
        {
          "name": "Update User - Email and Username",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userName\": \"johndoe_updated\",\n  \"userEmail\": \"john.updated@example.com\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                "{{userId}}"
              ]
            },
            "description": "Update user's email and username"
          },
          "response": []
        },
        {
          "name": "Update User - Role and Status",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"roles\": \"admin\",\n  \"isActive\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                "{{userId}}"
              ]
            },
            "description": "Update user's role and active status"
          },
          "response": []
        },
        {
          "name": "Update Last Login",
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                "{{userId}}",
                "login"
              ]
            },
            "description": "Update user's last login timestamp to current time"
          },
          "response": []
        },
        {
          "name": "Deactivate User",
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}/deactivate",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                "{{userId}}",
                "deactivate"
              ]
            },
            "description": "Deactivate a user (set isActive to false)"
          },
          "response": []
        },
        {
          "name": "Activate User",
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}/activate",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                "{{userId}}",
                "activate"
              ]
            },
            "description": "Activate a user (set isActive to true)"
          },
          "response": []
        },
        {
          "name": "Delete User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('User deleted successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains success message', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('message');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                "{{userId}}"
              ]
            },
            "description": "Delete a user permanently"
          },
          "response": []
        }
      ],
      "description": "All user-related API endpoints"
    },
    {
      "name": "Test Data Creation",
      "item": [
        {
          "name": "Create Multiple Test Users",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userName\": \"alice_johnson\",\n  \"userEmail\": \"alice@example.com\",\n  \"firstName\": \"Alice\",\n  \"lastName\": \"Johnson\",\n  \"roles\": \"user\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users"
              ]
            },
            "description": "Create test user - Alice"
          },
          "response": []
        },
        {
          "name": "Create Test User - Bob",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userName\": \"bob_moderator\",\n  \"userEmail\": \"bob@example.com\",\n  \"firstName\": \"Bob\",\n  \"lastName\": \"Wilson\",\n  \"roles\": \"moderator\",\n  \"isActive\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users"
              ]
            },
            "description": "Create test user - Bob (Moderator)"
          },
          "response": []
        },
        {
          "name": "Create Test User - Carol",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userName\": \"carol_admin\",\n  \"userEmail\": \"carol@example.com\",\n  \"firstName\": \"Carol\",\n  \"lastName\": \"Davis\",\n  \"roles\": \"admin\",\n  \"isActive\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users"
              ]
            },
            "description": "Create test user - Carol (Admin)"
          },
          "response": []
        }
      ],
      "description": "Requests to create test data"
    },
    {
      "name": "Error Testing",
      "item": [
        {
          "name": "Create User - Missing Fields",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userName\": \"incomplete\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users"
              ]
            },
            "description": "Test validation error - missing required fields"
          },
          "response": []
        },
        {
          "name": "Create User - Invalid Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userName\": \"testuser\",\n  \"userEmail\": \"invalid-email\",\n  \"firstName\": \"Test\",\n  \"lastName\": \"User\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users"
              ]
            },
            "description": "Test validation error - invalid email format"
          },
          "response": []
        },
        {
          "name": "Get User - Invalid ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/invalid-id-format",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                "invalid-id-format"
              ]
            },
            "description": "Test error handling for invalid ID format"
          },
          "response": []
        }
      ],
      "description": "Requests to test error handling and validation"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    }
  ]
}